%
% Status : main Dynare file
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

tic0 = tic;
% Define global variables.
global M_ options_ oo_ estim_params_ bayestopt_ dataset_ dataset_info estimation_info
options_ = [];
M_.fname = 'nk_model';
M_.dynare_version = '6.3';
oo_.dynare_version = '6.3';
options_.dynare_version = '6.3';
%
% Some global variables initialization
%
global_initialization;
M_.exo_names = cell(1,1);
M_.exo_names_tex = cell(1,1);
M_.exo_names_long = cell(1,1);
M_.exo_names(1) = {'eM'};
M_.exo_names_tex(1) = {'{\varepsilon_M}'};
M_.exo_names_long(1) = {'Monetary policy shock'};
M_.endo_names = cell(21,1);
M_.endo_names_tex = cell(21,1);
M_.endo_names_long = cell(21,1);
M_.endo_names(1) = {'Y'};
M_.endo_names_tex(1) = {'{Y}'};
M_.endo_names_long(1) = {'Real Output'};
M_.endo_names(2) = {'L'};
M_.endo_names_tex(2) = {'{L}'};
M_.endo_names_long(2) = {'Total Hours'};
M_.endo_names(3) = {'K'};
M_.endo_names_tex(3) = {'{K}'};
M_.endo_names_long(3) = {'Capital Stock'};
M_.endo_names(4) = {'X'};
M_.endo_names_tex(4) = {'{X}'};
M_.endo_names_long(4) = {'Capital Investment'};
M_.endo_names(5) = {'C'};
M_.endo_names_tex(5) = {'{C}'};
M_.endo_names_long(5) = {'Real Consumption'};
M_.endo_names(6) = {'w'};
M_.endo_names_tex(6) = {'{w}'};
M_.endo_names_long(6) = {'Real Wage'};
M_.endo_names(7) = {'r'};
M_.endo_names_tex(7) = {'{r_K}'};
M_.endo_names_long(7) = {'Real Capital Interest Rate'};
M_.endo_names(8) = {'rb'};
M_.endo_names_tex(8) = {'{r_B}'};
M_.endo_names_long(8) = {'Nominal Bond Interest Rate'};
M_.endo_names(9) = {'mc'};
M_.endo_names_tex(9) = {'{mc}'};
M_.endo_names_long(9) = {'Real Marginal Costs'};
M_.endo_names(10) = {'pii'};
M_.endo_names_tex(10) = {'{\pi}'};
M_.endo_names_long(10) = {'Price Inflation'};
M_.endo_names(11) = {'lg'};
M_.endo_names_tex(11) = {'{l_g}'};
M_.endo_names_long(11) = {'Government liabilities'};
M_.endo_names(12) = {'m'};
M_.endo_names_tex(12) = {'{m}'};
M_.endo_names_long(12) = {'Money supply'};
M_.endo_names(13) = {'tauu'};
M_.endo_names_tex(13) = {'{\tau}'};
M_.endo_names_long(13) = {'Variable lump-sum taxes'};
M_.endo_names(14) = {'muc'};
M_.endo_names_tex(14) = {'{muc}'};
M_.endo_names_long(14) = {'Marginal Utility out of Consumption'};
M_.endo_names(15) = {'muu'};
M_.endo_names_tex(15) = {'{\mu}'};
M_.endo_names_long(15) = {'Budget Constraint Penalty Price'};
M_.endo_names(16) = {'tet'};
M_.endo_names_tex(16) = {'{\theta}'};
M_.endo_names_long(16) = {'Capital Law of Motion Penalty Price'};
M_.endo_names(17) = {'cp'};
M_.endo_names_tex(17) = {'{c_P}'};
M_.endo_names_long(17) = {'Price Adjustment Cost'};
M_.endo_names(18) = {'cpp'};
M_.endo_names_tex(18) = {'{c^\prime_P}'};
M_.endo_names_long(18) = {'Marginal Price Adjustment Cost'};
M_.endo_names(19) = {'ci'};
M_.endo_names_tex(19) = {'{c_I}'};
M_.endo_names_long(19) = {'Investment Adjustment Cost'};
M_.endo_names(20) = {'cii'};
M_.endo_names_tex(20) = {'{c^\prime_I}'};
M_.endo_names_long(20) = {'Marginal Investment Adjustment Cost'};
M_.endo_names(21) = {'sM'};
M_.endo_names_tex(21) = {'{s_M}'};
M_.endo_names_long(21) = {'Monetary policy shock process'};
M_.endo_partitions = struct();
M_.param_names = cell(19,1);
M_.param_names_tex = cell(19,1);
M_.param_names_long = cell(19,1);
M_.param_names(1) = {'betta'};
M_.param_names_tex(1) = {'{\beta}'};
M_.param_names_long(1) = {'Period discount factor'};
M_.param_names(2) = {'sig'};
M_.param_names_tex(2) = {'{\sigma}'};
M_.param_names_long(2) = {'Intertemporal elasticity of substitution'};
M_.param_names(3) = {'gam'};
M_.param_names_tex(3) = {'{\gamma}'};
M_.param_names_long(3) = {'Inverse Frisch labor supply elasticity'};
M_.param_names(4) = {'vphi'};
M_.param_names_tex(4) = {'{\varphi}'};
M_.param_names_long(4) = {'Labor disutility level parameter'};
M_.param_names(5) = {'nuu'};
M_.param_names_tex(5) = {'{\nu}'};
M_.param_names_long(5) = {'Money velocity'};
M_.param_names(6) = {'delt'};
M_.param_names_tex(6) = {'{\delta}'};
M_.param_names_long(6) = {'Private capital depreciation rate'};
M_.param_names(7) = {'phiX'};
M_.param_names_tex(7) = {'{\phi_X}'};
M_.param_names_long(7) = {'Investment adjustment cost parameter'};
M_.param_names(8) = {'alp'};
M_.param_names_tex(8) = {'{\alpha}'};
M_.param_names_long(8) = {'Capital elasticity w.r.t. output'};
M_.param_names(9) = {'rhoo'};
M_.param_names_tex(9) = {'{\rho}'};
M_.param_names_long(9) = {'Elasticity of substitution between differentiated goods'};
M_.param_names(10) = {'kap'};
M_.param_names_tex(10) = {'{\kappa}'};
M_.param_names_long(10) = {'Price adjustment cost parameter'};
M_.param_names(11) = {'tauL'};
M_.param_names_tex(11) = {'{\tau_L}'};
M_.param_names_long(11) = {'Labor income tax'};
M_.param_names(12) = {'tauK'};
M_.param_names_tex(12) = {'{\tau_K}'};
M_.param_names_long(12) = {'Capital income tax'};
M_.param_names(13) = {'tauC'};
M_.param_names_tex(13) = {'{\tau_C}'};
M_.param_names_long(13) = {'Consumption tax'};
M_.param_names(14) = {'gamLG'};
M_.param_names_tex(14) = {'{\gamma_{l_g}}'};
M_.param_names_long(14) = {'Fiscal rule coefficient w.r.t. government liabilities'};
M_.param_names(15) = {'lgY_ss'};
M_.param_names_tex(15) = {'{lg^Y_{ss}}'};
M_.param_names_long(15) = {'Public-debt-to-GDP steady-state target'};
M_.param_names(16) = {'g_ss'};
M_.param_names_tex(16) = {'{G_{ss}}'};
M_.param_names_long(16) = {'Government spending steady-state target'};
M_.param_names(17) = {'tetPi'};
M_.param_names_tex(17) = {'{\theta_{\pi}}'};
M_.param_names_long(17) = {'Taylor coefficient w.r.t. inflation'};
M_.param_names(18) = {'stdM'};
M_.param_names_tex(18) = {'{\sigma_M}'};
M_.param_names_long(18) = {'Standard deviation monetary policy shock'};
M_.param_names(19) = {'rhoM'};
M_.param_names_tex(19) = {'{\rho_M}'};
M_.param_names_long(19) = {'Autocorrelation monetary policy shock'};
M_.param_partitions = struct();
M_.exo_det_nbr = 0;
M_.exo_nbr = 1;
M_.endo_nbr = 21;
M_.param_nbr = 19;
M_.orig_endo_nbr = 21;
M_.aux_vars = [];
M_.predetermined_variables = [ 3 11 15 ];
M_.Sigma_e = zeros(1, 1);
M_.Correlation_matrix = eye(1, 1);
M_.H = 0;
M_.Correlation_matrix_ME = 1;
M_.sigma_e_is_diagonal = true;
M_.det_shocks = [];
M_.surprise_shocks = [];
M_.learnt_shocks = [];
M_.learnt_endval = [];
M_.heteroskedastic_shocks.Qvalue_orig = [];
M_.heteroskedastic_shocks.Qscale_orig = [];
M_.matched_irfs = {};
M_.matched_irfs_weights = {};
options_.linear = false;
options_.block = false;
options_.bytecode = false;
options_.use_dll = false;
options_.ramsey_policy = false;
options_.discretionary_policy = false;
M_.eq_nbr = 21;
M_.ramsey_orig_eq_nbr = 0;
M_.ramsey_orig_endo_nbr = 0;
M_.set_auxiliary_variables = exist(['./+' M_.fname '/set_auxiliary_variables.m'], 'file') == 2;
M_.epilogue_names = {};
M_.epilogue_var_list_ = {};
M_.orig_maximum_endo_lag = 1;
M_.orig_maximum_endo_lead = 1;
M_.orig_maximum_exo_lag = 0;
M_.orig_maximum_exo_lead = 0;
M_.orig_maximum_exo_det_lag = 0;
M_.orig_maximum_exo_det_lead = 0;
M_.orig_maximum_lag = 1;
M_.orig_maximum_lead = 1;
M_.orig_maximum_lag_with_diffs_expanded = 1;
M_.lead_lag_incidence = [
 0 6 27;
 0 7 0;
 1 8 0;
 2 9 28;
 0 10 0;
 0 11 0;
 0 12 29;
 0 13 0;
 0 14 30;
 0 15 31;
 3 16 0;
 0 17 0;
 0 18 0;
 0 19 32;
 4 20 0;
 0 21 33;
 0 22 34;
 0 23 35;
 0 24 0;
 0 25 36;
 5 26 0;]';
M_.nstatic = 7;
M_.nfwrd   = 9;
M_.npred   = 4;
M_.nboth   = 1;
M_.nsfwrd   = 10;
M_.nspred   = 5;
M_.ndynamic   = 14;
M_.dynamic_tmp_nbr = [11; 0; 0; 0; ];
M_.equations_tags = {
  1 , 'name' , 'Marginal utility out of consumption' ;
  2 , 'name' , 'Labor supply' ;
  3 , 'name' , 'Cash-in-Advance Constraint' ;
  4 , 'name' , 'Euler Equation (Bond Prices)' ;
  5 , 'name' , 'Capital allocation (Tobins Q/Euler equation)' ;
  6 , 'name' , 'Optimal capital investment' ;
  7 , 'name' , 'Labor demand' ;
  8 , 'name' , 'Capital demand' ;
  9 , 'name' , 'NK Phillips curve' ;
  10 , 'name' , 'Resource constraint' ;
  11 , 'name' , 'Production function' ;
  12 , 'name' , 'Capital law of motion' ;
  13 , 'name' , 'Cash-in-advance constraint' ;
  14 , 'name' , 'Government budget constraint' ;
  15 , 'name' , 'Price adjustment cost' ;
  16 , 'name' , 'Marginal price adjustment cost' ;
  17 , 'name' , 'Investment adjustment cost' ;
  18 , 'name' , 'Marginal investment adjustment cost' ;
  19 , 'name' , 'Monetary policy rule' ;
  20 , 'name' , 'Fiscal policy rule' ;
  21 , 'name' , 'Monetary policy shock process' ;
};
M_.mapping.Y.eqidx = [7 8 9 10 11 ];
M_.mapping.L.eqidx = [2 7 11 14 ];
M_.mapping.K.eqidx = [8 11 12 14 ];
M_.mapping.X.eqidx = [6 10 12 17 18 ];
M_.mapping.C.eqidx = [1 10 13 14 ];
M_.mapping.w.eqidx = [2 7 14 ];
M_.mapping.r.eqidx = [5 8 14 ];
M_.mapping.rb.eqidx = [4 9 14 19 ];
M_.mapping.mc.eqidx = [7 8 9 ];
M_.mapping.pii.eqidx = [3 4 9 14 15 16 19 ];
M_.mapping.lg.eqidx = [14 20 ];
M_.mapping.m.eqidx = [13 14 ];
M_.mapping.tauu.eqidx = [2 5 14 20 ];
M_.mapping.muc.eqidx = [1 2 3 4 5 6 ];
M_.mapping.muu.eqidx = [2 3 4 5 6 ];
M_.mapping.tet.eqidx = [5 6 ];
M_.mapping.cp.eqidx = [9 11 15 ];
M_.mapping.cpp.eqidx = [9 16 ];
M_.mapping.ci.eqidx = [6 12 17 ];
M_.mapping.cii.eqidx = [6 18 ];
M_.mapping.sM.eqidx = [19 21 ];
M_.mapping.eM.eqidx = [21 ];
M_.static_and_dynamic_models_differ = false;
M_.has_external_function = false;
M_.block_structure.time_recursive = false;
M_.block_structure.block(1).Simulation_Type = 1;
M_.block_structure.block(1).endo_nbr = 1;
M_.block_structure.block(1).mfs = 1;
M_.block_structure.block(1).equation = [ 21];
M_.block_structure.block(1).variable = [ 21];
M_.block_structure.block(1).is_linear = true;
M_.block_structure.block(1).NNZDerivatives = 2;
M_.block_structure.block(1).bytecode_jacob_cols_to_sparse = [1 2 ];
M_.block_structure.block(2).Simulation_Type = 8;
M_.block_structure.block(2).endo_nbr = 20;
M_.block_structure.block(2).mfs = 18;
M_.block_structure.block(2).equation = [ 7 13 4 11 17 20 1 3 12 14 6 2 5 8 9 10 15 16 18 19];
M_.block_structure.block(2).variable = [ 6 12 8 2 19 13 5 15 3 11 4 14 16 7 9 1 17 18 20 10];
M_.block_structure.block(2).is_linear = false;
M_.block_structure.block(2).NNZDerivatives = 89;
M_.block_structure.block(2).bytecode_jacob_cols_to_sparse = [6 7 8 9 0 0 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 45 46 47 48 49 50 51 52 53 54 ];
M_.block_structure.block(1).g1_sparse_rowval = int32([]);
M_.block_structure.block(1).g1_sparse_colval = int32([]);
M_.block_structure.block(1).g1_sparse_colptr = int32([]);
M_.block_structure.block(2).g1_sparse_rowval = int32([1 6 9 10 2 7 8 12 4 8 3 17 1 8 13 18 2 8 10 3 7 9 4 8 10 11 5 8 14 1 6 11 7 8 3 7 9 14 17 1 5 6 9 10 11 9 11 8 12 8 10 12 13 2 8 10 12 13 14 2 13 15 13 16 9 17 15 16 18 9 1 6 9 11 9 11 11 13 13 13 13 9 1 6 8 13 ]);
M_.block_structure.block(2).g1_sparse_colval = int32([6 6 6 6 7 7 7 7 8 8 9 9 19 19 19 19 20 20 20 21 21 21 22 22 22 22 23 23 23 24 24 24 25 26 27 27 27 27 27 28 28 28 28 28 28 29 29 30 30 31 31 31 31 32 32 32 32 32 32 33 33 33 34 34 35 35 36 36 36 45 46 46 46 46 47 47 48 49 50 51 52 53 54 54 54 54 ]);
M_.block_structure.block(2).g1_sparse_colptr = int32([1 1 1 1 1 1 5 9 11 13 13 13 13 13 13 13 13 13 13 17 20 23 27 30 33 34 35 40 46 48 50 54 60 63 65 67 70 70 70 70 70 70 70 70 70 71 75 77 78 79 80 81 82 83 87 ]);
M_.block_structure.variable_reordered = [ 21 6 12 8 2 19 13 5 15 3 11 4 14 16 7 9 1 17 18 20 10];
M_.block_structure.equation_reordered = [ 21 7 13 4 11 17 20 1 3 12 14 6 2 5 8 9 10 15 16 18 19];
M_.block_structure.incidence(1).lead_lag = -1;
M_.block_structure.incidence(1).sparse_IM = [
 2 15;
 3 15;
 4 15;
 6 15;
 8 3;
 11 3;
 12 3;
 14 3;
 14 11;
 17 4;
 18 4;
 20 11;
 21 21;
];
M_.block_structure.incidence(2).lead_lag = 0;
M_.block_structure.incidence(2).sparse_IM = [
 1 5;
 1 14;
 2 2;
 2 6;
 2 13;
 2 14;
 3 14;
 3 15;
 4 8;
 4 14;
 4 15;
 5 13;
 5 14;
 5 15;
 5 16;
 6 4;
 6 14;
 6 16;
 6 19;
 6 20;
 7 1;
 7 2;
 7 6;
 7 9;
 8 1;
 8 7;
 8 9;
 9 1;
 9 8;
 9 9;
 9 17;
 9 18;
 10 1;
 10 4;
 10 5;
 11 1;
 11 2;
 11 17;
 12 3;
 12 4;
 12 19;
 13 5;
 13 12;
 14 2;
 14 5;
 14 6;
 14 7;
 14 8;
 14 11;
 14 12;
 14 13;
 15 10;
 15 17;
 16 10;
 16 18;
 17 4;
 17 19;
 18 4;
 18 20;
 19 8;
 19 10;
 19 21;
 20 13;
 21 21;
];
M_.block_structure.incidence(3).lead_lag = 1;
M_.block_structure.incidence(3).sparse_IM = [
 3 10;
 3 14;
 4 10;
 4 14;
 5 7;
 5 14;
 5 16;
 6 4;
 6 14;
 6 16;
 6 20;
 9 1;
 9 9;
 9 10;
 9 17;
 9 18;
 14 10;
];
M_.block_structure.dyn_tmp_nbr = 5;
M_.state_var = [21 15 3 11 4 ];
M_.maximum_lag = 1;
M_.maximum_lead = 1;
M_.maximum_endo_lag = 1;
M_.maximum_endo_lead = 1;
oo_.steady_state = zeros(21, 1);
M_.maximum_exo_lag = 0;
M_.maximum_exo_lead = 0;
oo_.exo_steady_state = zeros(1, 1);
M_.params = NaN(19, 1);
M_.endo_trends = struct('deflator', cell(21, 1), 'log_deflator', cell(21, 1), 'growth_factor', cell(21, 1), 'log_growth_factor', cell(21, 1));
M_.NNZDerivatives = [95; -1; -1; ];
M_.dynamic_g1_sparse_rowval = int32([8 11 12 14 17 18 14 20 2 3 4 6 21 7 8 9 10 11 2 7 11 14 12 6 10 12 17 18 1 10 13 14 2 7 14 8 14 4 9 14 19 7 8 9 15 16 19 14 13 14 2 5 14 20 1 2 3 4 5 6 3 4 5 5 6 9 11 15 9 16 6 12 17 6 18 19 21 9 6 5 9 3 4 9 14 3 4 5 6 5 6 9 9 6 21 ]);
M_.dynamic_g1_sparse_colval = int32([3 3 3 3 4 4 11 11 15 15 15 15 21 22 22 22 22 22 23 23 23 23 24 25 25 25 25 25 26 26 26 26 27 27 27 28 28 29 29 29 29 30 30 30 31 31 31 32 33 33 34 34 34 34 35 35 35 35 35 35 36 36 36 37 37 38 38 38 39 39 40 40 40 41 41 42 42 43 46 49 51 52 52 52 52 56 56 56 56 58 58 59 60 62 64 ]);
M_.dynamic_g1_sparse_colptr = int32([1 1 1 5 7 7 7 7 7 7 7 9 9 9 9 13 13 13 13 13 13 14 19 23 24 29 33 36 38 42 45 48 49 51 55 61 64 66 69 71 74 76 78 79 79 79 80 80 80 81 81 82 86 86 86 86 90 90 92 93 94 94 95 95 96 ]);
M_.lhs = {
'muc'; 
'w'; 
'nuu*muu(-1)'; 
'muc'; 
'tet'; 
'muu(-1)'; 
'w'; 
'r'; 
'cpp/(1-cp)'; 
'Y'; 
'Y'; 
'K'; 
'm'; 
'lg'; 
'cp'; 
'cpp'; 
'ci'; 
'cii'; 
'(1+rb)/(1+(rb))'; 
'tauu-(tauu)'; 
'sM'; 
};
M_.static_tmp_nbr = [6; 0; 0; 0; ];
M_.block_structure_stat.block(1).Simulation_Type = 1;
M_.block_structure_stat.block(1).endo_nbr = 2;
M_.block_structure_stat.block(1).mfs = 2;
M_.block_structure_stat.block(1).equation = [ 17 18];
M_.block_structure_stat.block(1).variable = [ 19 20];
M_.block_structure_stat.block(2).Simulation_Type = 3;
M_.block_structure_stat.block(2).endo_nbr = 1;
M_.block_structure_stat.block(2).mfs = 1;
M_.block_structure_stat.block(2).equation = [ 21];
M_.block_structure_stat.block(2).variable = [ 21];
M_.block_structure_stat.block(3).Simulation_Type = 6;
M_.block_structure_stat.block(3).endo_nbr = 18;
M_.block_structure_stat.block(3).mfs = 18;
M_.block_structure_stat.block(3).equation = [ 4 5 6 7 8 9 10 11 12 13 14 15 16 1 2 19 20 3];
M_.block_structure_stat.block(3).variable = [ 14 7 16 6 9 18 1 2 4 12 3 17 10 5 13 8 11 15];
M_.block_structure_stat.variable_reordered = [ 19 20 21 14 7 16 6 9 18 1 2 4 12 3 17 10 5 13 8 11 15];
M_.block_structure_stat.equation_reordered = [ 17 18 21 4 5 6 7 8 9 10 11 12 13 14 15 16 1 2 19 20 3];
M_.block_structure_stat.incidence.sparse_IM = [
 1 5;
 1 14;
 2 2;
 2 6;
 2 13;
 2 14;
 2 15;
 3 10;
 3 15;
 4 8;
 4 10;
 4 14;
 5 7;
 5 13;
 5 15;
 5 16;
 6 15;
 6 16;
 6 19;
 6 20;
 7 1;
 7 2;
 7 6;
 7 9;
 8 1;
 8 3;
 8 7;
 8 9;
 9 8;
 9 9;
 9 10;
 9 17;
 9 18;
 10 1;
 10 4;
 10 5;
 11 1;
 11 2;
 11 3;
 11 17;
 12 3;
 12 4;
 12 19;
 13 5;
 13 12;
 14 2;
 14 3;
 14 5;
 14 6;
 14 7;
 14 8;
 14 10;
 14 11;
 14 12;
 14 13;
 15 10;
 15 17;
 16 10;
 16 18;
 17 19;
 18 20;
 19 8;
 19 10;
 19 21;
 21 21;
];
M_.block_structure_stat.tmp_nbr = 6;
M_.block_structure_stat.block(1).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(1).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(1).g1_sparse_colptr = int32([]);
M_.block_structure_stat.block(2).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(2).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(2).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(3).g1_sparse_rowval = int32([1 14 15 2 5 11 2 3 4 11 15 4 5 6 6 13 4 5 7 8 4 8 11 15 7 9 10 11 5 8 9 11 6 8 12 1 6 11 12 13 16 18 7 10 11 14 2 11 15 1 6 11 16 11 2 3 15 18 ]);
M_.block_structure_stat.block(3).g1_sparse_colval = int32([1 1 1 2 2 2 3 3 4 4 4 5 5 5 6 6 7 7 7 7 8 8 8 8 9 9 10 10 11 11 11 11 12 12 12 13 13 13 13 13 13 13 14 14 14 14 15 15 15 16 16 16 16 17 18 18 18 18 ]);
M_.block_structure_stat.block(3).g1_sparse_colptr = int32([1 4 7 9 12 15 17 21 25 27 29 33 36 43 47 50 54 55 59 ]);
M_.static_g1_sparse_rowval = int32([7 8 10 11 2 7 11 14 8 11 12 14 10 12 1 10 13 14 2 7 14 5 8 14 4 9 14 19 7 8 9 3 4 9 14 15 16 19 14 13 14 2 5 14 1 2 4 2 3 5 6 5 6 9 11 15 9 16 6 12 17 6 18 19 21 ]);
M_.static_g1_sparse_colval = int32([1 1 1 1 2 2 2 2 3 3 3 3 4 4 5 5 5 5 6 6 6 7 7 7 8 8 8 8 9 9 9 10 10 10 10 10 10 10 11 12 12 13 13 13 14 14 14 15 15 15 15 16 16 17 17 17 18 18 19 19 19 20 20 21 21 ]);
M_.static_g1_sparse_colptr = int32([1 5 9 13 15 19 22 25 29 32 39 40 42 45 48 52 54 57 59 62 64 66 ]);
set_param_value('betta',par.betta);
set_param_value('sig',par.sig);
set_param_value('nuu',par.nuu);
set_param_value('gam',par.gam);
set_param_value('delt',par.delt);
set_param_value('phiX',par.phiX);
set_param_value('alp',par.alp);
set_param_value('rhoo',par.rhoo);
set_param_value('kap',par.kap);
set_param_value('tauL',par.tauL);
set_param_value('tauK',par.tauK);
set_param_value('tauC',par.tauC);
set_param_value('gamLG',par.gamLG);
set_param_value('lgY_ss',par.lgY_ss);
set_param_value('tetPi',par.tetPi);
set_param_value('stdM',par.stdM);
set_param_value('rhoM',par.rhoM);
%
% SHOCKS instructions
%
M_.exo_det_length = 0;
M_.Sigma_e(1, 1) = M_.params(18)^2;
options_.drop = 1000;
options_.irf = 20;
options_.order = 1;
options_.periods = 20000;
options_.pruning = true;
options_.replic = 10;
options_.simul_replic = 10;
var_list_ = {};
[info, oo_, options_, M_] = stoch_simul(M_, options_, oo_, var_list_);
send_endogenous_variables_to_workspace ;
send_exogenous_variables_to_workspace ;
send_irfs_to_workspace ;


oo_.time = toc(tic0);
disp(['Total computing time : ' dynsec2hms(oo_.time) ]);
if ~exist([M_.dname filesep 'Output'],'dir')
    mkdir(M_.dname,'Output');
end
save([M_.dname filesep 'Output' filesep 'nk_model_results.mat'], 'oo_', 'M_', 'options_');
if exist('estim_params_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'nk_model_results.mat'], 'estim_params_', '-append');
end
if exist('bayestopt_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'nk_model_results.mat'], 'bayestopt_', '-append');
end
if exist('dataset_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'nk_model_results.mat'], 'dataset_', '-append');
end
if exist('estimation_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'nk_model_results.mat'], 'estimation_info', '-append');
end
if exist('dataset_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'nk_model_results.mat'], 'dataset_info', '-append');
end
if exist('oo_recursive_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'nk_model_results.mat'], 'oo_recursive_', '-append');
end
if exist('options_mom_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'nk_model_results.mat'], 'options_mom_', '-append');
end
if ~isempty(lastwarn)
  disp('Note: warning(s) encountered in MATLAB/Octave code')
end
